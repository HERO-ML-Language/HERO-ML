<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net7.0</TargetFramework>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Update="FSharp.Core" Version="7.0.400" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="FsLexYacc" Version="10.2.0" GeneratePathProperty="true" />
	</ItemGroup>

	<!-- The following is a workaround to get FsLexYacc to work.
	     See https://github.com/fsprojects/FsLexYacc/issues/140 -->
	<PropertyGroup>
		<FsLexToolPath>$(PkgFsLexYacc)/build/fslex/netcoreapp3.1</FsLexToolPath>
		<FsYaccToolPath>$(PkgFsLexYacc)/build/fsyacc/netcoreapp3.1</FsYaccToolPath>
		<FsLexToolExe>fslex.dll</FsLexToolExe>
		<FsYaccToolExe>fsyacc.dll</FsYaccToolExe>
		<FsLexYaccToolRunner>dotnet </FsLexYaccToolRunner>
	</PropertyGroup>

	<ItemGroup>
		<Compile Include="Source_Ref.fs" />
		<Compile Include="Error.fs" />
		<Compile Include="AST.fs" />
		<Compile Include="Pretty_Print.fs" />
		<Compile Include="Parser/Lexer_Interface.fs" />
		<!-- The following is commented out to prevent constant rebuilds of the whole solution,
		     but needs to be uncommented to rebuild the parser source files.
		     "-&#45;" achieves double hyphens without interfering with the XML parsing. -->
		<!--
		<FsYacc Include="Parser/Parser.fsy">
			<OtherFlags>-&#45;module Parser -v -o "Parser/Generated files/Parser.fs"</OtherFlags>
		</FsYacc>
		<FsLex Include="Parser/Lexer.fsl">
			<OtherFlags>-&#45;module Lexer -&#45;unicode -o "Parser/Generated files/Lexer.fs"</OtherFlags>
		</FsLex>
		-->
		<Compile Include="Parser/Generated files/Parser.fsi" />
		<Compile Include="Parser/Generated files/Parser.fs" />
		<Compile Include="Parser/Generated files/Lexer.fs" />
		<Compile Include="Parser/Type_Analysis.fs" />
		<Compile Include="Parser/Parser_Wrapper.fs" />
	</ItemGroup>

</Project>
